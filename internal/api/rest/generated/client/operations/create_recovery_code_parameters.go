// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCreateRecoveryCodeParams creates a new CreateRecoveryCodeParams object
// with the default values initialized.
func NewCreateRecoveryCodeParams() *CreateRecoveryCodeParams {
	var ()
	return &CreateRecoveryCodeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateRecoveryCodeParamsWithTimeout creates a new CreateRecoveryCodeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateRecoveryCodeParamsWithTimeout(timeout time.Duration) *CreateRecoveryCodeParams {
	var ()
	return &CreateRecoveryCodeParams{

		timeout: timeout,
	}
}

// NewCreateRecoveryCodeParamsWithContext creates a new CreateRecoveryCodeParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateRecoveryCodeParamsWithContext(ctx context.Context) *CreateRecoveryCodeParams {
	var ()
	return &CreateRecoveryCodeParams{

		Context: ctx,
	}
}

// NewCreateRecoveryCodeParamsWithHTTPClient creates a new CreateRecoveryCodeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateRecoveryCodeParamsWithHTTPClient(client *http.Client) *CreateRecoveryCodeParams {
	var ()
	return &CreateRecoveryCodeParams{
		HTTPClient: client,
	}
}

/*CreateRecoveryCodeParams contains all the parameters to send to the API endpoint
for the create recovery code operation typically these are written to a http.Request
*/
type CreateRecoveryCodeParams struct {

	/*Args*/
	Args CreateRecoveryCodeBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create recovery code params
func (o *CreateRecoveryCodeParams) WithTimeout(timeout time.Duration) *CreateRecoveryCodeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create recovery code params
func (o *CreateRecoveryCodeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create recovery code params
func (o *CreateRecoveryCodeParams) WithContext(ctx context.Context) *CreateRecoveryCodeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create recovery code params
func (o *CreateRecoveryCodeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create recovery code params
func (o *CreateRecoveryCodeParams) WithHTTPClient(client *http.Client) *CreateRecoveryCodeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create recovery code params
func (o *CreateRecoveryCodeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithArgs adds the args to the create recovery code params
func (o *CreateRecoveryCodeParams) WithArgs(args CreateRecoveryCodeBody) *CreateRecoveryCodeParams {
	o.SetArgs(args)
	return o
}

// SetArgs adds the args to the create recovery code params
func (o *CreateRecoveryCodeParams) SetArgs(args CreateRecoveryCodeBody) {
	o.Args = args
}

// WriteToRequest writes these params to a swagger request
func (o *CreateRecoveryCodeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.Args); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
